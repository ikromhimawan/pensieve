import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import TextField from '@mui/material/TextField';
import Box from '@mui/material/Box';
import Grid from '@mui/material/Grid';
import Button from '@mui/material/Button';
import Link from 'next/link';
import { useState } from 'react';
import InputAdornment from '@mui/material/InputAdornment';
import IconButton from '@mui/material/IconButton';
import Visibility from '@mui/icons-material/Visibility';
import VisibilityOff from '@mui/icons-material/VisibilityOff';
import { useForm } from "react-hook-form";
import { yupResolver } from '@hookform/resolvers/yup';
import * as Yup from 'yup';
import { IsAlert } from '../component/IsAlert';
import { fetchApi } from '../helper/api';
import axios from 'axios';
import { useRouter } from 'next/router';



export default function Home() {
  const router = useRouter()
  const [values, setValues] = useState({
    showPassword: false,
  });
  const validationSchema = Yup.object().shape({
    user_name: Yup.string().required('Username required'),
    password: Yup.string().required('Password required'),
  });
  const formOptions = { resolver: yupResolver(validationSchema) };
  const { register, handleSubmit, formState: { errors } } = useForm(formOptions);
  const onSubmit = async (data) => {
    await axios.post("http://52.74.166.134:3000/api/login", {}, {
      auth: {
        username: data.user_name,
        password: data.password
      }
    }).then(function (response) {
      document.cookie = `token=${response.data.response.message.loginToken}`;
      router.push("/home")
    })
      .catch(function (error) {
        IsAlert.fire({
          title: "",
          text: error.response.data.response.message,
          icon: "error",
          showCancelButton: false,
          focusConfirm: false,
          confirmButtonText: 'OK',

        }).then(async function (isConfirm) {
          if (isConfirm.isConfirmed) {
          }
        })
      });;
  }
  return (
    <>
      <Head>
        <title>Login - Pensieve</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>

        <div className={styles.center}>
          <Image
            className={styles.logo}
            src="/pensieve.svg"
            alt="Next.js Logo"
            width={180}
            height={37}
            priority
          />
        </div>
        <form onSubmit={handleSubmit(onSubmit)} style={{ flex: 1 }}>
          <Box sx={{ flexGrow: 1 }} style={{ width: "25vw" }} >
            <Grid container spacing={2}>
              <Grid item xs={12}>
                <TextField
                  variant="filled"
                  fullWidth={true}
                  label="Username"
                  {...register("user_name")}
                  helperText={errors.user_name ? errors.user_name.message : ""}
                  error={errors.user_name ? true : false}
                />
              </Grid>
              <Grid item xs={12}>
                <TextField
                  variant="filled"
                  fullWidth={true}
                  label="Password"
                  type={values.showPassword ? 'text' : 'password'}
                  {...register("password")}
                  helperText={errors.password ? errors.password.message : ""}
                  error={errors.password ? true : false}
                  InputProps={{
                    endAdornment: <InputAdornment position="end">
                      <IconButton
                        aria-label="toggle password visibility"
                        onClick={() => { setValues({ showPassword: !values.showPassword }) }}
                        edge="end"
                      >
                        {values.showPassword ? <VisibilityOff /> : <Visibility />}
                      </IconButton>
                    </InputAdornment>,
                  }}
                />
              </Grid>
            </Grid>
            <Grid
              container
              direction="row"
              justifyContent="center"
              alignItems="center"
              style={{ marginTop: '20px' }}
            >
              <Grid item xs={3}>
                <Button type='submit' className={styles.thirteen} fullWidth={true} variant="outlined">Login</Button>
              </Grid>
            </Grid>
            <Grid
              container
              direction="row"
              justifyContent="center"
              alignItems="center"
              style={{ marginTop: '20px' }}
            >
              <Link href="/register">
                New User?
              </Link>
            </Grid>
          </Box>
        </form>
      </main>
    </>
  )
}
